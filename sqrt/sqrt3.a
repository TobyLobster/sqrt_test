; http://www.txbobsc.com/aal/1986/aal8611.html#a1

; SAVE S.PUTNEY-RBSC FISQR
; --------------------------------
;       ULTRA FAST INTEGER SQUARE ROOTS
;
;   BY: CHARLES H. PUTNEY
;       18 QUINNS ROAD
;       SHANKILL, CO. DUBLIN, IRELAND
;
;  INPUT: X = ARG HIGH BYTE
;         A = ARG LOW BYTE
;
;  OUTPUT: Y=INTEGER SQUARE ROOT OF X,A
;          X AND A DESTROYED
;
; --------------------------------
BAS_ARG    =  $02           ; ,01
NUMBER     =  $04           ; ,03
ARGSAV     =  $06           ; ,05
ARGLO      =  $08
; --------------------------------
       * = $60a4            ; OUT OF THE WAY
;       .TF SQUARE ROOT.OBJ
; --------------------------------
SQRT
       CPX #$40         ; VALUE ALREADY NORMALIZED?
       BCC l2           ; ...NO
; ---ARG = $4000...FFFF-----------49152 CASES
       CPX #$FF         ; CHECK FOR ARG-HI = $FF
       BEQ l9           ; ...YES, SPECIAL CASE
       LDY ROOT,X       ; GET ROOT, USE AS INDEX
       CMP TABLE2,Y
       BCC l1           ; ...SPEEDS UP AVERAGE BY 0.8 CYCLE
       TXA              ; ARG-HI
       SBC TABLE3,Y
       BCC l1
       INY
l1     RTS
; ---ARG = $0000...3FFF-----------
l2     STX ARGSAV+1     ; SAVE ARG-HI
       CPX #0           ; IS ARG-HI ZERO?
       BEQ l7           ; ...YES
; ---ARG = $01FF...3FFF-----------16128 CASES
       STA ARGSAV       ; SAVE ARG-LO FOR SHIFTING
       STA ARGLO        ; SAVE ARG-LO FOR LATER COMPARE
       TXA              ; ARG-HI TO A-REG
       LDY #0           ; START SHIFT COUNT = 0
l3     ASL ARGLO
       ROL
       ASL ARGLO
       ROL
       INY
       CMP #$40
       BCC l3
; ---A=NORM-ARG, Y=SHIFT-CNT------
l4     TAX              ; USE NORM-ARG FOR INDEX
       LDA ROOT,X       ; GET ROOT FROM TABLE
l5     LSR              ; HALF ROOT SHIFT-CNT TIMES
       DEY
       BNE l5
       TAY              ; USE SHIFTED ROOT FOR INDEX NOW
       LDA ARGSAV       ; GET ARG-LO
       CMP TABLE2,Y
       BCC l6           ; ...SPEEDS UP AVERAGE BY 0.7 CYCLE
       LDA ARGSAV+1
       SBC TABLE3,Y
       BCC l6
       INY
l6     RTS
; ---ARG = $0000...00FF-----------
l7     TAY              ; IS ARG-LO ALSO ZERO?
       BEQ l1           ; ...YES, SQRT=0
; ---ARG = $0001...00FF-----------255 CASES
       STA ARGSAV       ; SAVE ARG-LO FOR LATER COMPARE
       LDY #4           ; START SHIFT COUNT = 4
l8     CMP #$40         ; NORMALIZED YET?
       BCS l4           ; ...YES, GET ROOT NOW
       ASL
       ASL
       INY              ; COUNT THE SHIFT
       BNE l8           ; ...ALWAYS
; ---ARG = $FFXX------------------
l9     LDY #$FF
       RTS
; --------------------------------
;ZZ     =  *-SQRT
; --------------------------------
;       PUT TABLES SO NO PAGE CROSSING
!align $ff, $40
; --------------------------------
;       DON'T WASTE PAPER
;       .LIST MOFF
;       .MA HS
;       .HS ]1
;       .EM
; --------------------------------
;       SQUARE ROOT TABLE OF N
;       FROM $4000 (16384)
;       TO $FF00   (65280)
;       BY $100    (256)
TABLE1 !byte $80 ,$80 ,$81 ,$82 ,$83 ,$84 ,$85 ,$86
       !byte $87 ,$88 ,$89 ,$8A ,$8B ,$8C ,$8D ,$8E
       !byte $8F ,$90 ,$90 ,$91 ,$92 ,$93 ,$94 ,$95
       !byte $96 ,$96 ,$97 ,$98 ,$99 ,$9A ,$9B ,$9B
       !byte $9C ,$9D ,$9E ,$9F ,$A0 ,$A0 ,$A1 ,$A2
       !byte $A3 ,$A3 ,$A4 ,$A5 ,$A6 ,$A7 ,$A7 ,$A8
       !byte $A9 ,$AA ,$AA ,$AB ,$AC ,$AD ,$AD ,$AE
       !byte $AF ,$B0 ,$B0 ,$B1 ,$B2 ,$B2 ,$B3 ,$B4
       !byte $B5 ,$B5 ,$B6 ,$B7 ,$B7 ,$B8 ,$B9 ,$B9
       !byte $BA ,$BB ,$BB ,$BC ,$BD ,$BD ,$BE ,$BF
       !byte $C0 ,$C0 ,$C1 ,$C1 ,$C2 ,$C3 ,$C3 ,$C4
       !byte $C5 ,$C5 ,$C6 ,$C7 ,$C7 ,$C8 ,$C9 ,$C9
       !byte $CA ,$CB ,$CB ,$CC ,$CC ,$CD ,$CE ,$CE
       !byte $CF ,$D0 ,$D0 ,$D1 ,$D1 ,$D2 ,$D3 ,$D3
       !byte $D4 ,$D4 ,$D5 ,$D6 ,$D6 ,$D7 ,$D7 ,$D8
       !byte $D9 ,$D9 ,$DA ,$DA ,$DB ,$DB ,$DC ,$DD
       !byte $DD ,$DE ,$DE ,$DF ,$E0 ,$E0 ,$E1 ,$E1
       !byte $E2 ,$E2 ,$E3 ,$E3 ,$E4 ,$E5 ,$E5 ,$E6
       !byte $E6 ,$E7 ,$E7 ,$E8 ,$E8 ,$E9 ,$EA ,$EA
       !byte $EB ,$EB ,$EC ,$EC ,$ED ,$ED ,$EE ,$EE
       !byte $EF ,$F0 ,$F0 ,$F1 ,$F1 ,$F2 ,$F2 ,$F3
       !byte $F3 ,$F4 ,$F4 ,$F5 ,$F5 ,$F6 ,$F6 ,$F7
       !byte $F7 ,$F8 ,$F8 ,$F9 ,$F9 ,$FA ,$FA ,$FB
       !byte $FB ,$FC ,$FC ,$FD ,$FD ,$FE ,$FE ,$FF
; --------------------------------
;
;       SQUARE TABLE CONTAINING LOW
;       BYTE OF (N+1)
TABLE2 !byte $01 ,$04 ,$09 ,$10 ,$19 ,$24 ,$31 ,$40
       !byte $51 ,$64 ,$79 ,$90 ,$A9 ,$C4 ,$E1 ,$00
       !byte $21 ,$44 ,$69 ,$90 ,$B9 ,$E4 ,$11 ,$40
       !byte $71 ,$A4 ,$D9 ,$10 ,$49 ,$84 ,$C1 ,$00
       !byte $41 ,$84 ,$C9 ,$10 ,$59 ,$A4 ,$F1 ,$40
       !byte $91 ,$E4 ,$39 ,$90 ,$E9 ,$44 ,$A1 ,$00
       !byte $61 ,$C4 ,$29 ,$90 ,$F9 ,$64 ,$D1 ,$40
       !byte $B1 ,$24 ,$99 ,$10 ,$89 ,$04 ,$81 ,$00
       !byte $81 ,$04 ,$89 ,$10 ,$99 ,$24 ,$B1 ,$40
       !byte $D1 ,$64 ,$F9 ,$90 ,$29 ,$C4 ,$61 ,$00
       !byte $A1 ,$44 ,$E9 ,$90 ,$39 ,$E4 ,$91 ,$40
       !byte $F1 ,$A4 ,$59 ,$10 ,$C9 ,$84 ,$41 ,$00
       !byte $C1 ,$84 ,$49 ,$10 ,$D9 ,$A4 ,$71 ,$40
       !byte $11 ,$E4 ,$B9 ,$90 ,$69 ,$44 ,$21 ,$00
       !byte $E1 ,$C4 ,$A9 ,$90 ,$79 ,$64 ,$51 ,$40
       !byte $31 ,$24 ,$19 ,$10 ,$09 ,$04 ,$01 ,$00
       !byte $01 ,$04 ,$09 ,$10 ,$19 ,$24 ,$31 ,$40
       !byte $51 ,$64 ,$79 ,$90 ,$A9 ,$C4 ,$E1 ,$00
       !byte $21 ,$44 ,$69 ,$90 ,$B9 ,$E4 ,$11 ,$40
       !byte $71 ,$A4 ,$D9 ,$10 ,$49 ,$84 ,$C1 ,$00
       !byte $41 ,$84 ,$C9 ,$10 ,$59 ,$A4 ,$F1 ,$40
       !byte $91 ,$E4 ,$39 ,$90 ,$E9 ,$44 ,$A1 ,$00
       !byte $61 ,$C4 ,$29 ,$90 ,$F9 ,$64 ,$D1 ,$40
       !byte $B1 ,$24 ,$99 ,$10 ,$89 ,$04 ,$81 ,$00
       !byte $81 ,$04 ,$89 ,$10 ,$99 ,$24 ,$B1 ,$40
       !byte $D1 ,$64 ,$F9 ,$90 ,$29 ,$C4 ,$61 ,$00
       !byte $A1 ,$44 ,$E9 ,$90 ,$39 ,$E4 ,$91 ,$40
       !byte $F1 ,$A4 ,$59 ,$10 ,$C9 ,$84 ,$41 ,$00
       !byte $C1 ,$84 ,$49 ,$10 ,$D9 ,$A4 ,$71 ,$40
       !byte $11 ,$E4 ,$B9 ,$90 ,$69 ,$44 ,$21 ,$00
       !byte $E1 ,$C4 ,$A9 ,$90 ,$79 ,$64 ,$51 ,$40
       !byte $31 ,$24 ,$19 ,$10 ,$09 ,$04 ,$01 ,$00
; --------------------------------
;
;       SQUARE TABLE CONTAINING HIGH
;       BYTE OF (N+1)
TABLE3 !byte $00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00
       !byte $00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$00 ,$01
       !byte $01 ,$01 ,$01 ,$01 ,$01 ,$01 ,$02 ,$02
       !byte $02 ,$02 ,$02 ,$03 ,$03 ,$03 ,$03 ,$04
       !byte $04 ,$04 ,$04 ,$05 ,$05 ,$05 ,$05 ,$06
       !byte $06 ,$06 ,$07 ,$07 ,$07 ,$08 ,$08 ,$09
       !byte $09 ,$09 ,$0A ,$0A ,$0A ,$0B ,$0B ,$0C
       !byte $0C ,$0D ,$0D ,$0E ,$0E ,$0F ,$0F ,$10
       !byte $10 ,$11 ,$11 ,$12 ,$12 ,$13 ,$13 ,$14
       !byte $14 ,$15 ,$15 ,$16 ,$17 ,$17 ,$18 ,$19
       !byte $19 ,$1A ,$1A ,$1B ,$1C ,$1C ,$1D ,$1E
       !byte $1E ,$1F ,$20 ,$21 ,$21 ,$22 ,$23 ,$24
       !byte $24 ,$25 ,$26 ,$27 ,$27 ,$28 ,$29 ,$2A
       !byte $2B ,$2B ,$2C ,$2D ,$2E ,$2F ,$30 ,$31
       !byte $31 ,$32 ,$33 ,$34 ,$35 ,$36 ,$37 ,$38
       !byte $39 ,$3A ,$3B ,$3C ,$3D ,$3E ,$3F ,$40
       !byte $41 ,$42 ,$43 ,$44 ,$45 ,$46 ,$47 ,$48
       !byte $49 ,$4A ,$4B ,$4C ,$4D ,$4E ,$4F ,$51
       !byte $52 ,$53 ,$54 ,$55 ,$56 ,$57 ,$59 ,$5A
       !byte $5B ,$5C ,$5D ,$5F ,$60 ,$61 ,$62 ,$64
       !byte $65 ,$66 ,$67 ,$69 ,$6A ,$6B ,$6C ,$6E
       !byte $6F ,$70 ,$72 ,$73 ,$74 ,$76 ,$77 ,$79
       !byte $7A ,$7B ,$7D ,$7E ,$7F ,$81 ,$82 ,$84
       !byte $85 ,$87 ,$88 ,$8A ,$8B ,$8D ,$8E ,$90
       !byte $91 ,$93 ,$94 ,$96 ,$97 ,$99 ,$9A ,$9C
       !byte $9D ,$9F ,$A0 ,$A2 ,$A4 ,$A5 ,$A7 ,$A9
       !byte $AA ,$AC ,$AD ,$AF ,$B1 ,$B2 ,$B4 ,$B6
       !byte $B7 ,$B9 ,$BB ,$BD ,$BE ,$C0 ,$C2 ,$C4
       !byte $C5 ,$C7 ,$C9 ,$CB ,$CC ,$CE ,$D0 ,$D2
       !byte $D4 ,$D5 ,$D7 ,$D9 ,$DB ,$DD ,$DF ,$E1
       !byte $E2 ,$E4 ,$E6 ,$E8 ,$EA ,$EC ,$EE ,$F0
       !byte $F2 ,$F4 ,$F6 ,$F8 ,$FA ,$FC ,$FE ,$00
; --------------------------------
ROOT   =  TABLE1-$40    ; SET UP SO $80 IS FIRST SQUARE ROOT
EXACTL =  TABLE2        ; SET UP SO 0 INDEX        (OF $4000)
EXACTH =  TABLE3        ; GIVES EXACT SQUARE OF 1
; --------------------------------