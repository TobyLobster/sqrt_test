; https://codebase64.org/doku.php?id=base:fast_sqrt
; Originally from https://csdb.dk/forums/?roomid=11&topicid=26608&showallposts=1 (see the posts by 'Graham')

mlo     = $02               ; input
mhi     = $03               ; input
thi     = $04               ; temp

    * = $0200

start
    ldy #0                  ; root = 0
    ldx #7                  ; loop counter and index into 'stab'
    clc                     ; clear bit 16 of m
loop
    tya
    ora stab-1,x
    sta thi                 ; temp_high = (root asl 8) | (d asl 7)
    lda mhi
    bcs skip0               ; m >= 65536? then t <= m is always true
    cmp thi
    bcc skip1               ; temp_high <= m
skip0
    sbc thi
    sta mhi                 ; m = m - temp_high

    tya                     ;
    ora stab,x              ;
    tay                     ; root = root or d
skip1
    asl mlo                 ;
    rol mhi                 ; m = m << 1

    dex                     ; loop counter
    bne loop                ;

    ; last iteration
    bcs skip2               ;
    sty thi                 ;
    lda mlo                 ;
    cmp #$80                ;
    lda mhi                 ;
    sbc thi                 ;
    bcc skip3               ;
skip2
    iny                     ; root = root or d (d is 1 here)
skip3
    rts                     ;

stab
   !byte $01,$02,$04,$08,$10,$20,$40,$80
