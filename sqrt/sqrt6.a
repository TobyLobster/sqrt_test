; https://www.bbcelite.com/master/main/subroutine/ll5.html
; Q = SQRT(R Q)

R = $02
Q = $03
S = $04
T = $05

* = $0200

LL5

    ldy R               ; Set (Y S) = (R Q)
    lda Q
    sta S

                        ; So now to calculate Q = SQRT(Y S)

    ldx #0              ; Set X = 0, to hold the remainder

    stx Q               ; Set Q = 0, to hold the result

    lda #8              ; Set T = 8, to use as a loop counter
    sta T

LL6

    cpx Q               ; If X < Q, jump to LL7
    bcc LL7

    bne LL8             ; If X > Q, jump to LL8

    cpy #64             ; If Y < 64, jump to LL7 with the C flag clear,
    bcc LL7             ; otherwise fall through into LL8 with the C flag set

LL8

    tya                 ; Set Y = Y - 64
    sbc #64             ;
    tay                 ; This subtraction will work as we know C is set from
                        ; the BCC above, and the result will not underflow as we
                        ; already checked that Y >= 64, so the C flag is also
                        ; set for the next subtraction

    txa                 ; Set X = X - Q
    sbc Q
    tax

LL7

    rol Q               ; Shift the result in Q to the left, shifting the C flag
                        ; into bit 0 and bit 7 into the C flag

    asl S               ; Shift the dividend in (Y S) to the left, inserting
    tya                 ; bit 7 from above into bit 0
    rol
    tay

    txa                 ; Shift the remainder in X to the left
    rol
    tax

    asl S               ; Shift the dividend in (Y S) to the left
    tya
    rol
    tay

    txa                 ; Shift the remainder in X to the left
    rol
    tax

    dec T               ; Decrement the loop counter

    bne LL6             ; Loop back to LL6 until we have done 8 loops

    rts                 ; Return from the subroutine
