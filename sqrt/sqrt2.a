; http://www.6502.org/source/integers/root.htm

Numberl     = $F0       ; number to find square root of low byte
Numberh     = Numberl+1 ; number to find square root of high byte
Reml        = $F2       ; remainder low byte
Remh        = Reml+1    ; remainder high byte
templ       = $F4       ; temp partial low byte
temph       = templ+1   ; temp partial high byte
Root        = $F6       ; square root

    *= $8000            ; can be anywhere, ROM or RAM

SqRoot
    lda #$00            ; clear A
    sta Reml            ; clear remainder low byte
    sta Remh            ; clear remainder high byte
    sta Root            ; clear Root
    ldx #$08            ; 8 pairs of bits to do
Loop
    asl Root            ; Root = Root * 2

    asl Numberl         ; shift highest bit of number ..
    rol Numberh         ;
    rol Reml            ; .. into remainder
    rol Remh            ;

    asl Numberl         ; shift highest bit of number ..
    rol Numberh         ;
    rol Reml            ; .. into remainder
    rol Remh            ;

    lda Root            ; copy Root ..
    sta templ           ; .. to templ
    lda #$00            ; clear byte
    sta temph           ; clear temp high byte

    sec                 ; +1
    rol templ           ; temp = temp * 2 + 1
    rol temph           ;

    lda Remh            ; get remainder high byte
    cmp temph           ; comapre with partial high byte
    bcc Next            ; skip sub if remainder high byte smaller

    bne Subtr           ; do sub if <> (must be remainder>partial !)

    lda Reml            ; get remainder low byte
    cmp templ           ; comapre with partial low byte
    bcc Next            ; skip sub if remainder low byte smaller

                        ; else remainder>=partial so subtract then
                        ; and add 1 to root. carry is always set here
Subtr
    lda Reml            ; get remainder low byte
    sbc templ           ; subtract partial low byte
    sta Reml            ; save remainder low byte
    lda Remh            ; get remainder high byte
    sbc temph           ; subtract partial high byte
    sta Remh            ; save remainder high byte

    inc Root            ; increment Root
Next
    dex                 ; decrement bit pair count
    bne Loop            ; loop if not all done

    rts
